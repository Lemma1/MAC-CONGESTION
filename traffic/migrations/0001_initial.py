# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2017-02-17 13:45
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Closed_roads',
            fields=[
                ('perm_no', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('type', models.SmallIntegerField()),
                ('location', models.CharField(max_length=100)),
                ('neighbor', models.CharField(max_length=100)),
                ('lat', models.FloatField()),
                ('lng', models.FloatField()),
                ('note', models.CharField(max_length=500)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('wkday_hrs', models.CharField(max_length=30)),
                ('wkend_hrs', models.CharField(max_length=30)),
                ('wkday_hrsfull', models.CharField(max_length=50)),
                ('wkend_hrsfull', models.CharField(max_length=50)),
                ('backfill', models.BooleanField(default=True)),
                ('coordinate', models.BooleanField(default=True)),
                ('traffic_ctl', models.BooleanField(default=True)),
                ('closure', models.BooleanField(default=True)),
                ('onelane', models.BooleanField(default=True)),
                ('postno', models.BooleanField(default=True)),
                ('pat', models.BooleanField(default=True)),
                ('ctl_plan', models.BooleanField(default=True)),
                ('emerge', models.BooleanField(default=True)),
                ('buss', models.BooleanField(default=True)),
                ('ped_clean', models.BooleanField(default=True)),
                ('off_police', models.BooleanField(default=True)),
                ('flagper', models.BooleanField(default=True)),
                ('penndot', models.BooleanField(default=True)),
                ('rdline', models.CharField(max_length=50000)),
            ],
        ),
        migrations.CreateModel(
            name='Counts_sensors',
            fields=[
                ('sid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('coordinates', models.TextField()),
                ('counts', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Counts_sensors_links',
            fields=[
                ('sid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('coordinates', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Crashdata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Cnty', models.SmallIntegerField()),
                ('First', models.SmallIntegerField(db_index=True)),
                ('Severe', models.SmallIntegerField()),
                ('Weather', models.SmallIntegerField()),
                ('Roadcon', models.SmallIntegerField()),
                ('Y2010', models.SmallIntegerField()),
                ('Y2011', models.SmallIntegerField()),
                ('Y2012', models.SmallIntegerField()),
                ('Y2013', models.SmallIntegerField()),
                ('Y2014', models.SmallIntegerField()),
                ('Ypre', models.FloatField()),
                ('Ystd', models.FloatField()),
            ],
            options={
                'ordering': ['pid_id'],
            },
        ),
        migrations.CreateModel(
            name='GIS_links',
            fields=[
                ('link_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('miles', models.FloatField()),
                ('from_node', models.CharField(max_length=10)),
                ('to_node', models.CharField(max_length=10)),
                ('s_lon', models.FloatField()),
                ('s_lat', models.FloatField()),
                ('e_lon', models.FloatField()),
                ('e_lat', models.FloatField()),
                ('geometries', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='GTFS_calendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_id', models.CharField(max_length=50)),
                ('monday', models.CharField(max_length=1)),
                ('tuesday', models.CharField(max_length=1)),
                ('wednesday', models.CharField(max_length=1)),
                ('thursday', models.CharField(max_length=1)),
                ('friday', models.CharField(max_length=1)),
                ('saturday', models.CharField(max_length=1)),
                ('sunday', models.CharField(max_length=1)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('GTFS', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Incidents',
            fields=[
                ('eventid', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('st_rt_no', models.PositiveSmallIntegerField()),
                ('sr', models.CharField(max_length=255)),
                ('cause', models.CharField(max_length=25)),
                ('status', models.CharField(max_length=20)),
                ('close_date', models.DateField()),
                ('close_time', models.TimeField()),
                ('open_date', models.DateField()),
                ('open_time', models.TimeField()),
                ('s_lat', models.FloatField()),
                ('s_lon', models.FloatField()),
                ('e_lat', models.FloatField()),
                ('e_lon', models.FloatField()),
                ('geoJson', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_ke', models.IntegerField()),
                ('l_street_i', models.IntegerField()),
                ('r_street_i', models.IntegerField()),
                ('l_dup_stre', models.IntegerField()),
                ('r_dup_stre', models.IntegerField()),
                ('cad_llo', models.IntegerField()),
                ('cad_lhi', models.IntegerField()),
                ('cad_rlo', models.IntegerField()),
                ('cad_rhi', models.IntegerField()),
                ('llo', models.IntegerField()),
                ('lhi', models.IntegerField()),
                ('rlo', models.IntegerField()),
                ('rhi', models.IntegerField()),
                ('st_premodi', models.CharField(max_length=12)),
                ('st_prefix', models.CharField(max_length=2)),
                ('st_pretype', models.CharField(max_length=12)),
                ('st_name', models.CharField(max_length=50)),
                ('st_type', models.CharField(max_length=8)),
                ('st_postmod', models.CharField(max_length=12)),
                ('lmuni', models.CharField(max_length=50)),
                ('rmuni', models.CharField(max_length=50)),
                ('lcounty', models.CharField(max_length=50)),
                ('rcounty', models.CharField(max_length=50)),
                ('lstate', models.CharField(max_length=2)),
                ('rstate', models.CharField(max_length=2)),
                ('l_zip', models.CharField(max_length=10)),
                ('r_zip', models.CharField(max_length=10)),
                ('edit_date', models.DateField()),
                ('edit_user', models.CharField(max_length=50)),
                ('f_node', models.FloatField()),
                ('t_node', models.FloatField()),
                ('fcc', models.CharField(max_length=5)),
                ('speed', models.IntegerField()),
                ('f_zlev', models.IntegerField()),
                ('t_zlev', models.IntegerField()),
                ('oneway', models.CharField(max_length=5)),
                ('lar', models.CharField(max_length=1)),
                ('lardir', models.CharField(max_length=2)),
                ('a1', models.CharField(max_length=75)),
                ('a2', models.CharField(max_length=75)),
                ('dynamapid', models.CharField(max_length=25)),
                ('full_name', models.CharField(max_length=128)),
                ('cad_a1', models.CharField(max_length=75)),
                ('cad_a2', models.CharField(max_length=75)),
                ('p_ovr_l', models.CharField(max_length=8)),
                ('p_ovr_r', models.CharField(max_length=8)),
                ('f_ovr_l', models.CharField(max_length=8)),
                ('f_ovr_r', models.CharField(max_length=8)),
                ('e_ovr_l', models.CharField(max_length=8)),
                ('e_ovr_r', models.CharField(max_length=8)),
                ('cad2', models.CharField(max_length=8)),
                ('enforce_va', models.CharField(max_length=1)),
                ('source_id', models.IntegerField()),
                ('st_suffix', models.CharField(max_length=4)),
                ('shape_stle', models.FloatField()),
                ('shape_leng', models.FloatField()),
                ('geom', django.contrib.gis.db.models.fields.MultiLineStringField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Meter',
            fields=[
                ('mid', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('street_name', models.CharField(max_length=20)),
                ('block', models.CharField(max_length=5)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='PAcounty',
            fields=[
                ('county_code', models.IntegerField(primary_key=True, serialize=False)),
                ('county_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Parking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('weekday', models.CharField(max_length=3)),
                ('occupancy', models.TextField()),
                ('meter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traffic.Meter')),
            ],
        ),
        migrations.CreateModel(
            name='Parking_lots',
            fields=[
                ('lot_id', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('max_spots', models.PositiveSmallIntegerField()),
                ('lon', models.FloatField()),
                ('lat', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='PAroad',
            fields=[
                ('pid', models.IntegerField(primary_key=True, serialize=False)),
                ('street_name', models.CharField(max_length=100)),
                ('Cnty', models.SmallIntegerField(db_index=True)),
                ('First', models.SmallIntegerField(db_index=True)),
                ('length', models.CharField(max_length=10)),
                ('coordinate', models.TextField()),
            ],
            options={
                'ordering': ['pid'],
            },
        ),
        migrations.CreateModel(
            name='Permissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'permissions': (('test_pc', 'test_permission'), ('perm_weather', 'permission to access weather section'), ('perm_camera', 'permission to access camera section'), ('perm_count', 'permission to access traffic counts section'), ('perm_travel', 'permission to access travel time and trip planner section'), ('perm_incident', 'permission to access incidents section'), ('perm_ev_station', 'permission to access EV stations section'), ('perm_download', 'permission to access download section'), ('perm_transit', 'permission to access transit section'), ('perm_parking', 'permission to access parking section'), ('perm_crash', 'permission to access crash section'), ('perm_closure', 'permission to access closure section'), ('perm_twitter_map', 'permission to access twitter incident section'), ('perm_congestion', 'permission to access congestion section')),
            },
        ),
        migrations.CreateModel(
            name='Philly_congestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('value', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Philly_congestion_array',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('values', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=None)),
            ],
        ),
        migrations.CreateModel(
            name='Philly_congestion_array_online',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('values', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=None)),
            ],
        ),
        migrations.CreateModel(
            name='Philly_DMS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no', models.IntegerField()),
                ('name', models.CharField(max_length=20)),
                ('geom', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('status', models.CharField(max_length=20)),
                ('county', models.CharField(max_length=20)),
                ('software', models.CharField(max_length=20)),
                ('dmstype', models.CharField(max_length=20)),
                ('direction', models.CharField(max_length=20)),
                ('next_exit', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=200)),
                ('link', models.IntegerField()),
                ('display', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Philly_link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no', models.IntegerField()),
                ('v0prt', models.FloatField()),
                ('tsysset', models.CharField(max_length=23)),
                ('numlanes', models.FloatField()),
                ('county_10', models.CharField(max_length=12)),
                ('hwy_num', models.CharField(max_length=28)),
                ('cap_1h', models.FloatField()),
                ('length', models.FloatField()),
                ('direction', models.IntegerField()),
                ('geom', django.contrib.gis.db.models.fields.LineStringField(srid=4326)),
                ('geom_str', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Philly_online_loading',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Philly_request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=20)),
                ('taskname', models.CharField(max_length=20)),
                ('taskid', models.IntegerField()),
                ('parameter', django.contrib.postgres.fields.jsonb.JSONField()),
                ('finish', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Real_time_tmc_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmc', models.CharField(max_length=9)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('speed', models.FloatField()),
                ('avg_speed', models.FloatField()),
                ('ref_speed', models.FloatField()),
                ('delta', models.SmallIntegerField()),
                ('score', models.SmallIntegerField()),
                ('c_value', models.SmallIntegerField()),
                ('travel_time', models.FloatField()),
                ('cong_level', models.SmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('route_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('agency_id', models.CharField(max_length=10)),
                ('short_name', models.CharField(max_length=5, unique=True)),
                ('long_name', models.CharField(max_length=50)),
                ('inbound_stops_geoJson', models.TextField()),
                ('route_type', models.CharField(max_length=1)),
                ('outbound_stops_geoJson', models.TextField()),
                ('inbound_geoJson', models.TextField()),
                ('outbound_geoJson', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Route_dict',
            fields=[
                ('short_name', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('route_number_in_APCAVL', models.CharField(max_length=5, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SPCCorridorNodeInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Corridor_Number', models.PositiveSmallIntegerField()),
                ('Corridor_Name', models.CharField(max_length=50)),
                ('Node_Number', models.CharField(max_length=5)),
                ('Node_Name', models.CharField(max_length=50)),
                ('Latitude', models.FloatField()),
                ('Longitude', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='SPCCorridorNodeInfo2013to2015',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Corridor_Number', models.PositiveSmallIntegerField()),
                ('Corridor_Name', models.CharField(max_length=50)),
                ('Node_Number', models.CharField(max_length=5)),
                ('Node_Name', models.CharField(max_length=50)),
                ('Latitude', models.FloatField()),
                ('Longitude', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='SPCtraveltime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Year', models.PositiveSmallIntegerField()),
                ('Corridor_Number', models.PositiveSmallIntegerField()),
                ('Start_Node', models.CharField(max_length=50)),
                ('End_Node', models.CharField(max_length=50)),
                ('AM_Peak_Hour_Volume', models.PositiveSmallIntegerField()),
                ('PM_Peak_Hour_Volume', models.PositiveSmallIntegerField()),
                ('Speed_Limit', models.PositiveSmallIntegerField()),
                ('Distance', models.FloatField()),
                ('Travel_Time_At_Posted_Speed_Limit', models.FloatField()),
                ('Weighted_Avg_Speed', models.FloatField()),
                ('AM_Travel_Time', models.FloatField()),
                ('PM_Travel_Time', models.FloatField()),
                ('AM_Avg_Speed', models.FloatField()),
                ('AM_Weighted_Speed', models.FloatField()),
                ('AM_Delay_Per_Vehicle', models.FloatField()),
                ('PM_Avg_Speed', models.FloatField()),
                ('PM_Weighted_Speed', models.FloatField()),
                ('PM_Delay_Per_Vehicle', models.FloatField()),
                ('AM_Total_Delay', models.FloatField()),
                ('PM_Total_Delay', models.FloatField()),
                ('Direction', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='SPCtraveltime2013to2015',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Year', models.PositiveSmallIntegerField()),
                ('Corridor_Number', models.PositiveSmallIntegerField()),
                ('Start_Node', models.CharField(max_length=50)),
                ('End_Node', models.CharField(max_length=50)),
                ('Time', models.FloatField()),
                ('Travel_Time', models.FloatField()),
                ('Speed', models.FloatField()),
                ('Travel_Time_At_Posted_Speed_Limit', models.FloatField()),
                ('Posted_Speed_Limit', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Stop',
            fields=[
                ('stop_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=60)),
                ('geoJson', models.TextField()),
                ('lat', models.FloatField()),
                ('lon', models.FloatField()),
                ('zone_id', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Stop_route',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stop_id', models.CharField(db_index=True, max_length=10)),
                ('route_id', models.CharField(db_index=True, max_length=10)),
                ('direction', models.CharField(max_length=1)),
                ('order', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Stop_time',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trip_id', models.CharField(max_length=50)),
                ('arrival_time', models.CharField(max_length=8)),
                ('departure_time', models.CharField(max_length=8)),
                ('stop_id', models.CharField(max_length=10)),
                ('stop_sequence', models.PositiveSmallIntegerField()),
                ('pickup_type', models.CharField(max_length=1)),
                ('drop_off_type', models.CharField(max_length=1)),
                ('GTFS', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Street',
            fields=[
                ('sid', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('street_name', models.CharField(max_length=100)),
                ('coordinate', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Streetparking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('occupancy', models.TextField()),
                ('street', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traffic.Street')),
            ],
        ),
        migrations.CreateModel(
            name='Streetpre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('occupancy', models.TextField()),
                ('street', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traffic.Street')),
            ],
        ),
        migrations.CreateModel(
            name='Streetrate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('rate', models.TextField()),
                ('street', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traffic.Street')),
            ],
        ),
        migrations.CreateModel(
            name='Streetratepre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('rate', models.TextField()),
                ('street', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traffic.Street')),
            ],
        ),
        migrations.CreateModel(
            name='TMC',
            fields=[
                ('tmc', models.CharField(max_length=9, primary_key=True, serialize=False)),
                ('road', models.CharField(db_index=True, max_length=50)),
                ('direction', models.CharField(choices=[(b'N', b'Northbound'), (b'S', b'Southbound'), (b'E', b'Eastbound'), (b'W', b'Westbound')], max_length=1)),
                ('intersection', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=2)),
                ('county', models.CharField(max_length=20)),
                ('zip', models.CharField(max_length=5)),
                ('s_lat', models.FloatField()),
                ('s_lon', models.FloatField()),
                ('e_lat', models.FloatField()),
                ('e_lon', models.FloatField()),
                ('miles', models.FloatField()),
                ('road_order', models.PositiveSmallIntegerField()),
                ('reference_speed', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='TMC_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('speed', models.FloatField()),
                ('avg_speed', models.FloatField()),
                ('travel_time', models.FloatField()),
                ('tmc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traffic.TMC')),
            ],
        ),
        migrations.CreateModel(
            name='TMC_Here',
            fields=[
                ('tmc', models.CharField(max_length=9, primary_key=True, serialize=False)),
                ('state', models.CharField(max_length=2)),
                ('county', models.CharField(max_length=20)),
                ('miles', models.FloatField()),
                ('road_number', models.CharField(max_length=20)),
                ('road_name', models.CharField(max_length=100)),
                ('lat', models.FloatField()),
                ('lon', models.FloatField()),
                ('direction', models.CharField(choices=[(b'N', b'Northbound'), (b'S', b'Southbound'), (b'E', b'Eastbound'), (b'W', b'Westbound')], max_length=1)),
                ('coordinates', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TMC_Here_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('epoch', models.PositiveSmallIntegerField()),
                ('tt_all', models.PositiveSmallIntegerField(default=0)),
                ('tt_pv', models.PositiveSmallIntegerField(default=0)),
                ('tt_ft', models.PositiveSmallIntegerField(default=0)),
                ('spd_all', models.FloatField(default=-1.0)),
                ('spd_pv', models.FloatField(default=-1.0)),
                ('spd_ft', models.FloatField(default=-1.0)),
                ('tmc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traffic.TMC_Here')),
            ],
        ),
        migrations.CreateModel(
            name='TMC_real_time',
            fields=[
                ('tmc', models.CharField(max_length=9, primary_key=True, serialize=False)),
                ('road', models.CharField(db_index=True, max_length=50)),
                ('direction', models.CharField(choices=[(b'N', b'Northbound'), (b'S', b'Southbound'), (b'E', b'Eastbound'), (b'W', b'Westbound')], max_length=1)),
                ('intersection', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=2)),
                ('county', models.CharField(max_length=20)),
                ('zip', models.CharField(max_length=5)),
                ('s_lat', models.FloatField()),
                ('s_lon', models.FloatField()),
                ('e_lat', models.FloatField()),
                ('e_lon', models.FloatField()),
                ('miles', models.FloatField()),
                ('road_order', models.PositiveSmallIntegerField()),
                ('reference', models.FloatField()),
                ('speed', models.FloatField()),
                ('average', models.FloatField()),
                ('ttm', models.FloatField()),
                ('congestion', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='TMC_Ritis',
            fields=[
                ('tmc', models.CharField(max_length=9, primary_key=True, serialize=False)),
                ('road_name', models.CharField(db_index=True, max_length=50)),
                ('direction', models.CharField(choices=[(b'N', b'Northbound'), (b'S', b'Southbound'), (b'E', b'Eastbound'), (b'W', b'Westbound')], max_length=1)),
                ('intersection', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=2)),
                ('county', models.CharField(max_length=20)),
                ('zip', models.CharField(max_length=5)),
                ('s_lat', models.FloatField()),
                ('s_lon', models.FloatField()),
                ('e_lat', models.FloatField()),
                ('e_lon', models.FloatField()),
                ('miles', models.FloatField()),
                ('road_order', models.PositiveSmallIntegerField()),
                ('coordinates', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Transit_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dow', models.CharField(max_length=1)),
                ('dir', models.CharField(max_length=1)),
                ('route', models.CharField(max_length=4)),
                ('tripa', models.CharField(max_length=4)),
                ('blocka', models.CharField(max_length=10)),
                ('vehnoa', models.CharField(max_length=4)),
                ('date', models.DateField()),
                ('stopa', models.PositiveSmallIntegerField()),
                ('qstopa', models.CharField(max_length=8)),
                ('aname', models.TextField()),
                ('hour', models.PositiveSmallIntegerField()),
                ('minute', models.PositiveSmallIntegerField()),
                ('second', models.PositiveSmallIntegerField()),
                ('dhour', models.PositiveSmallIntegerField()),
                ('dminute', models.PositiveSmallIntegerField()),
                ('dsecond', models.PositiveSmallIntegerField()),
                ('on_num', models.PositiveSmallIntegerField()),
                ('off_num', models.PositiveSmallIntegerField()),
                ('load_num', models.PositiveSmallIntegerField()),
                ('dlmiles', models.FloatField()),
                ('dlmin', models.FloatField()),
                ('dlpmls', models.FloatField()),
                ('dwtime', models.FloatField()),
                ('delta', models.PositiveSmallIntegerField()),
                ('schtim', models.PositiveSmallIntegerField()),
                ('schdev', models.FloatField()),
                ('srtime', models.FloatField()),
                ('artime', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Transit_shape',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shape_id', models.CharField(db_index=True, max_length=10)),
                ('lat', models.FloatField()),
                ('lon', models.FloatField()),
                ('sequence', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_id', models.CharField(max_length=35)),
                ('trip_id', models.CharField(max_length=50)),
                ('headsign', models.CharField(max_length=100)),
                ('direction_id', models.CharField(max_length=1)),
                ('block_id', models.CharField(max_length=20)),
                ('shape_id', models.CharField(max_length=10)),
                ('GTFS', models.CharField(max_length=50)),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traffic.Route')),
            ],
        ),
        migrations.CreateModel(
            name='TwitterEvents',
            fields=[
                ('eventid', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('st_rt_no', models.PositiveSmallIntegerField()),
                ('sr', models.CharField(max_length=255)),
                ('cause', models.CharField(max_length=25)),
                ('status', models.CharField(max_length=20)),
                ('close_date', models.DateField()),
                ('close_time', models.TimeField()),
                ('open_date', models.DateField()),
                ('open_time', models.TimeField()),
                ('s_lat', models.FloatField()),
                ('s_lon', models.FloatField()),
                ('e_lat', models.FloatField()),
                ('e_lon', models.FloatField()),
                ('geoJson', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Weather',
            fields=[
                ('county', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('state', models.CharField(max_length=2)),
                ('api', models.CharField(max_length=30)),
                ('update_time', models.TimeField()),
                ('geoJson', models.TextField()),
                ('weather', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Weather_zipcode',
            fields=[
                ('zipcode', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('geoJson', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Weather_zipcode_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_time', models.DateTimeField()),
                ('code', models.PositiveSmallIntegerField()),
                ('timestamp', models.TextField()),
                ('temp', models.SmallIntegerField()),
                ('text', models.TextField()),
                ('zipcode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traffic.Weather_zipcode')),
            ],
        ),
        migrations.AlterIndexTogether(
            name='tmc_ritis',
            index_together=set([('road_name', 'road_order')]),
        ),
        migrations.AlterUniqueTogether(
            name='stop_time',
            unique_together=set([('trip_id', 'stop_sequence', 'GTFS')]),
        ),
        migrations.AlterIndexTogether(
            name='stop_time',
            index_together=set([('trip_id', 'stop_id', 'GTFS'), ('stop_id', 'GTFS')]),
        ),
        migrations.AddField(
            model_name='philly_congestion_array_online',
            name='link',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traffic.Philly_link'),
        ),
        migrations.AddField(
            model_name='philly_congestion_array_online',
            name='loading',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traffic.Philly_online_loading'),
        ),
        migrations.AddField(
            model_name='philly_congestion_array',
            name='link',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traffic.Philly_link'),
        ),
        migrations.AddField(
            model_name='philly_congestion_array',
            name='request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traffic.Philly_request'),
        ),
        migrations.AddField(
            model_name='philly_congestion',
            name='link',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traffic.Philly_link'),
        ),
        migrations.AddField(
            model_name='philly_congestion',
            name='request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traffic.Philly_request'),
        ),
        migrations.AlterIndexTogether(
            name='incidents',
            index_together=set([('close_date', 'close_time')]),
        ),
        migrations.AlterUniqueTogether(
            name='gtfs_calendar',
            unique_together=set([('service_id', 'GTFS')]),
        ),
        migrations.AddField(
            model_name='crashdata',
            name='pid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traffic.PAroad'),
        ),
        migrations.AlterUniqueTogether(
            name='trip',
            unique_together=set([('trip_id', 'GTFS')]),
        ),
        migrations.AlterIndexTogether(
            name='trip',
            index_together=set([('route', 'GTFS', 'direction_id')]),
        ),
        migrations.AlterIndexTogether(
            name='tmc_data',
            index_together=set([('tmc', 'date', 'time')]),
        ),
        migrations.AlterIndexTogether(
            name='crashdata',
            index_together=set([('Severe', 'Weather', 'Roadcon', 'Cnty')]),
        ),
    ]
